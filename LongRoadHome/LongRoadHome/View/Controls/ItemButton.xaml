<UserControl x:Class="uk.ac.dundee.arpond.longRoadHome.View.Controls.ItemButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="110" d:DesignWidth="110"
             Name="itemBtn">
    <UserControl.Resources>
        <BitmapImage x:Key="itemBck" UriSource="../../Resources/itemBck.png" />
        <Style x:Key="TextOnlyButton" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="FontFamily" Value="Oswald"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=outline, Path=IsMouseOver}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=outline, Path=IsMouseOver}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="NoChromeButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="Chrome" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="hoverText" TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=outline, Path=IsMouseOver}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=outline, Path=IsMouseOver}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="hoverDock" TargetType="{x:Type DockPanel}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=outline, Path=IsMouseOver}" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="Gray" Opacity="0.7"/>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=outline, Path=IsMouseOver}" Value="False">
                    <Setter Property="Background" Value="Transparent"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid x:Name="outline">
        <Image Source="{StaticResource itemBck}" />
        <Label
            VerticalAlignment="Bottom" 
            HorizontalAlignment="Right" 
            Height="40" Width="125" 
            Margin="0 0 12 8" 
            FontSize="22" 
            FontFamily="Oswald" 
            Foreground="White" 
            Content="{Binding ElementName=itemBtn, Path=Amount, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
            ContentStringFormat="x{0}" FlowDirection="RightToLeft"/>
        <Border Grid.Column="0" Grid.Row="0" Background="Transparent"  BorderThickness="1" >
            <Image 
                x:Name="image" 
                Source="{Binding ElementName=itemBtn, Path=ItemIcon, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                Margin="3" />
        </Border>
        <DockPanel 
            x:Name="hoverDock" Grid.Column="0" Grid.Row="0" Style="{DynamicResource hoverDock}"
            HorizontalAlignment="Stretch" 
            VerticalAlignment="Stretch" 
            Height="Auto">
            <TextBlock
                DockPanel.Dock="Top"
                Text="{Binding ElementName=itemBtn, Path=Description, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                Margin="10 7"
                TextWrapping="Wrap"
                Style="{DynamicResource hoverText}"
                Foreground="White"
                FontFamily="Oswald"
                FontSize="12"
                >
            </TextBlock>
            <StackPanel DockPanel.Dock="Bottom" Height="Auto" Orientation="Horizontal" HorizontalAlignment="Center">
                <Button
                    Grid.Column="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Bottom"
                    x:Name="useItemBtn"
                    Content="Use"
                    Style="{DynamicResource TextOnlyButton}"
                    Height="25"
                    Width="30"
                    Margin="0 2 0 5"
                    Click="UseButton_Click"
                    />
                <Button
                    Grid.Column="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Bottom"
                    x:Name="discardItemBtn"
                    Content="Discard"
                    Style="{DynamicResource TextOnlyButton}"
                    Height="25"
                    Width="50"
                    Margin="0 2 0 5"
                    Click="DiscardButton_Click"
                    />
            </StackPanel>
        </DockPanel>
    </Grid>
    
</UserControl>
